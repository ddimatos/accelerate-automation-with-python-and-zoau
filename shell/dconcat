#!/bin/sh

# ---------------------------------------------------------------------
# Variables
# ---------------------------------------------------------------------
reverse=''

# ---------------------------------------------------------------------
# Help documentation shown on utility usage error.
# ---------------------------------------------------------------------

help()
{
   echo "This utility will find the differences and by default will concatenate"
   echo "the compared-dataset to the src-dataset."
   echo "The default behavior can be reversed so that src-dataset is appended to"
   echo "compared-dataset by using option '-r'"
   echo "If a third data set is provided, option '-o' is ignored and the two"
   echo "datasets will be merged without any duplicates"
   echo
   echo "Syntax: dconcat [-o|h] <src-dataset> <compared-dataset> <new-dataset>"
   echo "options:"
   echo "r     'true' to reverse the contamination order."
   echo "h     Print this Help."
   echo
}

# ---------------------------------------------------------------------
# Options arg parser with embedded logic
# ---------------------------------------------------------------------

OPTSTRING="rh:"

while getopts "${OPTSTRING}" opt; do
  case "${opt}" in
    r)
      reverse="true"
      ;;
    h)
      help
      exit 1
      ;;
    ?)
      echo "Error: Invalid option has been declared -${OPTARG}." >&2
      exit 1
      ;;
  esac
done

# Shift processed options to access remaining options
shift "$((OPTIND-1))"

if [ -n "$1" ]; then
    check_option=`echo "$*" |grep "-"`
    if [ -n "$check_option" ]; then
        echo "Options must become before values."
        help
        exit 1
    else
        # Case: Write ddiff out to a new data set.
        # Maybe a dcp here then append diff to get a complete concat
        if [ -n "$3" ]; then
            #echo "Case: Write ddiff out to a new data set."
            delta=`ddiff "$1" "$2" | tail -n +7|grep "^I -" |cut -c5-84`
            printf '%s' "$delta" | decho $3
            delta=`ddiff "$1" "$2" | tail -n +7|grep "^D -" |cut -c5-84`
            echo "$delta" | decho -a $3
            exit
        fi

        # Case: Write DS1 into DS2 (reverse the write order)
        if [[ "$reverse" == "true" ]]; then
            #echo "Case: Write DS1 diff into DS2 (reverse the write order)"
            delta=`ddiff "$1" "$2" | tail -n +7|grep "^D -" |cut -c5-84`
            echo "$delta" | decho -a $2
            exit
        fi

        #echo "Case: Write DS2 diff into DS1"
        delta=`ddiff "$1" "$2" | tail -n +7|grep "^I -" |cut -c5-84`
        echo "$delta" | decho -a $1
        exit
    fi
fi
